@@ -12,7 +12,7 @@
var url = require('url');
var querystring = require('querystring');
var express = require('express');
var unblocker = require('unblocker');
var Unblocker = require('unblocker');
var Transform = require('stream').Transform;
var youtube = require('unblocker/examples/youtube/youtube.js')

@@ -53,20 +53,18 @@ function googleAnalyticsMiddleware(data) {
    }
}

var unblockerConfig = {
var unblocker = new Unblocker({
    prefix: '/proxy/',
    requestMiddleware: [
        youtube.processRequest
    ],
    responseMiddleware: [
        googleAnalyticsMiddleware
    ]
};


});

// this line must appear before any express.static calls (or anything else that sends responses)
app.use(unblocker(unblockerConfig));
app.use(unblocker);

// serve up static files *after* the proxy is run
app.use('/', express.static(__dirname + '/public'));
@@ -79,5 +77,8 @@ app.get("/no-js", function(req, res) {
    res.redirect(unblockerConfig.prefix + site);
});

// for compatibility with gatlin and other servers, export the app rather than passing it directly to http.createServer
module.exports = app;
const port = process.env.PORT || process.env.VCAP_APP_PORT || 8080;

app.listen(port, function() {
    console.log(`node unblocker process listening at http://localhost:${port}/`);
}).on("upgrade", unblocker.onUpgrade); // onUpgrade handles websockets
  6 changes: 3 additions & 3 deletions6  
package.json
@@ -7,17 +7,17 @@
  "homepage": "https://github.com/nfriedly/nodeunblocker.com/",
  "dependencies": {
    "express": "^4.13.0",
    "gatling": "~1.2.0",
    "gatling": "^2.0.0",
    "newrelic": "^1.20.2",
    "through": "^2.3.8",
    "unblocker": "*",
    "unblocker": "^2.2.0",
    "ytdl-core": "^4.5.0"
  },
  "engines": {
    "node": ">=6"
  },
  "scripts": {
    "start": "node ./node_modules/gatling/gatling.js ./app.js"
    "start": "gatling app.js"
  },
  "license": "AGPL-3.0"
}
